name: Build MacOS
on: workflow_dispatch
jobs:
  build-arm:
    permissions:
      contents: write
    runs-on: macos-14
    steps:
      - name: Current date time
        uses: Kaven-Universe/github-action-current-date-time@v1.4.0
        id: time
        with:
          format: "YYYYMMDDHHmmss"

      - uses: actions/checkout@v4
      - name: setup build deps
        run: brew install ninja

      - name: checkout llvm
        run: git clone --single-branch --depth 1 --branch main https://github.com/llvm/llvm-project $GITHUB_WORKSPACE/llvm-project

      - name: setup build
        run: |
          mkdir -p $GITHUB_WORKSPACE/llvm-project/build \
            && cd $GITHUB_WORKSPACE/llvm-project/build \
            && git checkout main \
            && cmake -G "Ninja" -S ../llvm \
              -DCMAKE_INSTALL_PREFIX="$GITHUB_WORKSPACE/llvm-main" \
              -DCMAKE_BUILD_TYPE="Release" \
              -DLLVM_TARGETS_TO_BUILD="X86;AArch64" \
              -DLLVM_ENABLE_ASSERTIONS=ON \
              -DLLVM_ENABLE_PROJECTS="clang;lld" \
              -DLLVM_INCLUDE_TESTS=Off \
              -DLLVM_INCLUDE_EXAMPLES=Off \
              -DLLVM_OPTIMIZED_TABLEGEN=On \
              -DLLVM_ENABLE_ZLIB=OFF \
              -DLLVM_ENABLE_ZSTD=OFF \
            && ninja -C . install
      - name: package results
        run: |
          pushd $GITHUB_WORKSPACE/llvm-main \
            && tar -cJf $GITHUB_WORKSPACE/clang+llvm-main-aarch64-apple-darwin.tar.xz \
               . \
            && ls $GITHUB_WORKSPACE \
            && popd

      - name: Upload Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          tag: latest
          name: LLVM main ${{ steps.time.outputs.time }}
          makeLatest: false
          artifacts: clang+llvm-main-aarch64-apple-darwin.tar.xz

  build-x86:
    permissions:
      contents: write
    runs-on: macos-latest
    steps:
      - name: Current date time
        uses: Kaven-Universe/github-action-current-date-time@v1.4.0
        id: time
        with:
          format: "YYYYMMDDHHmmss"

      - uses: actions/checkout@v4
      - name: setup build deps
        run: brew install ninja

      - name: checkout llvm
        run: git clone --single-branch --depth 1 --branch main https://github.com/llvm/llvm-project $GITHUB_WORKSPACE/llvm-project

      - name: setup build
        run: |
          mkdir -p $GITHUB_WORKSPACE/llvm-project/build \
            && cd $GITHUB_WORKSPACE/llvm-project/build \
            && git checkout main \
            && cmake -G "Ninja" -S ../llvm \
              -DCMAKE_INSTALL_PREFIX="$GITHUB_WORKSPACE/llvm-main" \
              -DCMAKE_BUILD_TYPE="Release" \
              -DLLVM_TARGETS_TO_BUILD="X86;AArch64" \
              -DLLVM_ENABLE_ASSERTIONS=ON \
              -DLLVM_ENABLE_PROJECTS="clang;lld" \
              -DLLVM_INCLUDE_TESTS=Off \
              -DLLVM_INCLUDE_EXAMPLES=Off \
              -DLLVM_OPTIMIZED_TABLEGEN=On \
              -DLLVM_ENABLE_ZLIB=OFF \
              -DLLVM_ENABLE_ZSTD=OFF \
            && ninja -C . install
      - name: package results
        run: |
          pushd $GITHUB_WORKSPACE/llvm-main \
            && tar -cJf $GITHUB_WORKSPACE/clang+llvm-main-x86_64-apple-darwin.tar.xz \
               . \
            && ls $GITHUB_WORKSPACE \
            && popd

      - name: Upload Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          tag: latest
          name: LLVM main ${{ steps.time.outputs.time }}
          makeLatest: false
          artifacts: clang+llvm-main-x86_64-apple-darwin.tar.xz
